# .github/workflows/check.yml

name: Check Schema

# Controls when the action will run. Triggers the workflow on push or pull request events
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # https://docs.github.com/en/actions/reference/environments
    environment: apollo-dev

    # https://docs.github.com/en/actions/reference/encrypted-secrets
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepsenv
    env:
      APOLLO_REGISTRY_URL: ${{ secrets.APOLLO_REGISTRY_URL }}
      APOLLO_KEY: ${{ secrets.APOLLO_KEY }}
      APOLLO_VCS_COMMIT: ${{ github.event.pull_request.head.sha }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Installs Rover into $PATH for use with subsequent steps
      - uses: apollographql/rover-actions/install-rover-cli@v1

      # Only run this command with the `background` setting if you have the Apollo Studio GitHub integration enabled on your repository
      - uses: apollographql/rover-actions/subgraph-check@v1
        with:
          apollo-key: ${{ secrets.APOLLO_KEY }}
          # This could also be provided via an environment variable or GitHub Action variable
          graph-ref: ${{ secrets.APOLLO_GRAPH_REF }}
          name: locations
          # If you use a code-first subgraph, you can generate the schema in another step for use with this action
          schema: ./subgraph-locations/locations.graphql
